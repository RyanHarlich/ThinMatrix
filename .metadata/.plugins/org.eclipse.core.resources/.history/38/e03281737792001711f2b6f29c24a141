#version 400 core

in vec4 clipSpace;
in vec2 textureCoords;

out vec4 out_Color;

uniform sampler2D reflectionTexture; // above water
uniform sampler2D refractionTexture; // under water
uniform sampler2D dudvMap;

const float waveStrength = 0.02f;

void main(void) {

	vec2 ndc = (clipSpace.xy/clipSpace.w) / 2.0f + 0.5f; //normalizedDeviceCoordinates
	vec2 refractTexCoords = vec2(ndc.x, ndc.y);
	vec2 reflectTexCoords = vec2(ndc.x, -ndc.y);
	
	vec2 distortion1 = (texture(dudvMap, vec2(textureCoords.x, textureCoords.y)).rg * 2.0 - 1.0) * waveStrength; // only care about the red green components
	
	refractTexCoords += distortion1;
	refractTexCoords = clamp(refractTexCoords, 0.001f, 0.999f);
	reflectTexCoords += distortion1;
	refractTexCoords.x = clamp(refractTexCoords.x, 0.001f, 0.999f);
	refractTexCoords.y = clamp(refractTexCoords.y, -0.999f, -0.001f);
	
	vec4 reflectColor = texture(reflectionTexture, reflectTexCoords);
	vec4 refractColor = texture(refractionTexture, refractTexCoords);
	

	out_Color = mix(reflectColor, refractColor, 0.5);

}